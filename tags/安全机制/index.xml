<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>安全机制 - 标签 - povcfe&#39;s blog</title>
        <link>https://povcfe.github.io/tags/%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/</link>
        <description>安全机制 - 标签 - povcfe&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 21 Mar 2021 06:14:56 -0700</lastBuildDate><atom:link href="https://povcfe.github.io/tags/%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/" rel="self" type="application/rss+xml" /><item>
    <title>linux内核(5.4.81)---KASAN</title>
    <link>https://povcfe.github.io/posts/kernel_kasan/</link>
    <pubDate>Sun, 21 Mar 2021 06:14:56 -0700</pubDate>
    <author>作者</author>
    <guid>https://povcfe.github.io/posts/kernel_kasan/</guid>
    <description><![CDATA[发表于安全客
KASAN 简述   KASAN是内核用于动态检测内存错误的工具, 简单来说, 数据区域可分为两种:可访问区域，不可访问区域(red_zone).KASAN存在影子内存(shadow memory), 他和正常内存的比例是1:8, 即1byte shadow memory可以代表8bytes 正常内存的可访问性.
  128TB(内核正常内存) : 16TB(影子内存) &mdash; Documentation/x86/x86_64/mm.rst x86-64 内存布局显示如下:
   ffffec0000000000 | -20 TB | fffffbffffffffff | 16 TB | KASAN shadow memory   具体规则(+: byte可访问, -: byte不可访问)
 如果1byte shadow memory对应的8bytes 内存都可访问, 则*(shadow memory) == 0  [0] -&gt; [+, +, +, +, +, +, +, +]  如果1byte shadow memory对应的8bytes 内存都不可访问, 则*(shadow memory)为负数  [-1] -&gt; [-, -, -, -, -, -, -, -]  如果1byte shadow memory对应的8bytes 内存中有N bytes可访问, 则*(shadow memory) == N  if N = 3 [3] -&gt; [+, +, +, -, -, -, -, -]   实现原理]]></description>
</item></channel>
</rss>
